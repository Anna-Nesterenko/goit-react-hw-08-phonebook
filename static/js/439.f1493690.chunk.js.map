{"version":3,"file":"static/js/439.f1493690.chunk.js","mappings":"ySAIO,SAASA,EAAT,GAAmC,IAAXC,EAAU,EAAVA,OACvBC,EAAe,CACnBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGZ,GAA0BC,EAAAA,EAAAA,WAAS,UAAKJ,IAAxC,eAAOK,EAAP,KAAcC,EAAd,KACQL,EAA0BI,EAA1BJ,KAAMC,EAAoBG,EAApBH,MAAOC,EAAaE,EAAbF,SAEfI,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdP,EAAgBO,EAAhBP,KAAMQ,EAAUD,EAAVC,MACdH,GAAS,SAAAI,GAAS,yBACbA,GADa,cAEfT,EAAOQ,QAUZ,OACE,SAACE,EAAA,EAAD,CAAWC,UAAU,MAAMC,SAAS,KAApC,UACE,UAACC,EAAA,EAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAACC,EAAA,EAAD,CACEC,QAAQ,KACRC,MAAO,CAAEC,WAAY,SAAUC,WAAY,OAF7C,sBAMA,UAACV,EAAA,EAAD,CAAKF,UAAU,OAAOa,SAtBP,SAAAC,GACnBA,EAAEC,iBACF5B,GAAO,UAAKM,IACZC,GAAS,UAAKN,KAmBoCe,GAAI,CAAEa,GAAI,GAAxD,WACE,SAACC,EAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,OACHC,MAAM,YACNjC,KAAK,OACLkC,aAAa,OACbC,WAAS,EACT3B,MAAOR,EACPoB,QAAQ,WACRgB,SAAU9B,KAEZ,SAACsB,EAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNjC,KAAK,QACLkC,aAAa,QACbG,KAAK,QACL7B,MAAOP,EACPmB,QAAQ,WACRgB,SAAU9B,KAEZ,SAACsB,EAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACT/B,KAAK,WACLiC,MAAM,WACNI,KAAK,WACLL,GAAG,WACHE,aAAa,mBACb1B,MAAON,EACPkB,QAAQ,WACRgB,SAAU9B,KAGZ,SAACgC,EAAA,EAAD,CACED,KAAK,SACLN,WAAS,EACTX,QAAQ,YACRN,GAAI,CAAEa,GAAI,EAAGY,GAAI,GAJnB,6B,cCrFGC,EAAe,SAAC,GAAD,SAAGC,KAAgBC,OAAS,I,UCwBxD,EAlBqB,WACnB,IAAMC,GAAWC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,IAAYN,GAAvBK,OASR,OACE,+BACE,SAAChD,EAAD,CAAcC,OATC,SAAAiD,GACF,MAAXF,GACFG,EAAAA,GAAAA,MAAY,8BAEdL,GAASM,EAAAA,EAAAA,GAAOF","sources":["components/RegisterForm/RegisterForm.jsx","redux/auth/authSelectors.js","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import { Button, TextField, Box, Container, Typography } from '@mui/material';\n\nimport { useState } from 'react';\n\nexport function RegisterForm({ onData }) {\n  const initialState = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  const [state, setState] = useState({ ...initialState });\n  const { name, email, password } = state;\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onData({ ...state });\n    setState({ ...initialState });\n  };\n\n  return (\n    <Container component=\"div\" maxWidth=\"xs\">\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Typography\n          variant=\"h4\"\n          style={{ fontFamily: 'Caveat', fontWeight: '600' }}\n        >\n          Sign Up\n        </Typography>\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"User name\"\n            name=\"name\"\n            autoComplete=\"name\"\n            autoFocus\n            value={name}\n            variant=\"standard\"\n            onChange={handleChange}\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            type=\"email\"\n            value={email}\n            variant=\"standard\"\n            onChange={handleChange}\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={password}\n            variant=\"standard\"\n            onChange={handleChange}\n          />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign Up\n          </Button>\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n","export const getAuthError = ({ auth }) => auth.error || {};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { signUp } from 'redux/auth/authThunk';\nimport { getAuthError } from 'redux/auth/authSelectors';\nimport toast from 'react-hot-toast';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n  const { status } = useSelector(getAuthError);\n\n  const onRegister = data => {\n    if (status === 400) {\n      toast.error('You are already registered');\n    }\n    dispatch(signUp(data));\n  };\n\n  return (\n    <>\n      <RegisterForm onData={onRegister} />\n    </>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["RegisterForm","onData","initialState","name","email","password","useState","state","setState","handleChange","target","value","prevState","Container","component","maxWidth","Box","sx","marginTop","display","flexDirection","alignItems","Typography","variant","style","fontFamily","fontWeight","onSubmit","e","preventDefault","mt","TextField","margin","required","fullWidth","id","label","autoComplete","autoFocus","onChange","type","Button","mb","getAuthError","auth","error","dispatch","useDispatch","status","useSelector","data","toast","signUp"],"sourceRoot":""}